{"version":3,"sources":["store/slices/userSlice.ts","hooks/useAuth.ts","utils/constansts.ts","hooks/typedReduxHooks.ts","components/nav/Navbar.tsx","pages/home/Home.tsx","pages/notFound/NotFound.tsx","store/slices/firebaseSlice.ts","pages/login/Login.tsx","pages/chat/Chat.tsx","socket/index.ts","store/slices/videochatSlice.ts","components/chatList/ChatList.tsx","pages/videochat/Videochat.tsx","hooks/useWebRTC.ts","hooks/useStateWithCallback.ts","pages/videochatRoom/VideochatRoom.tsx","components/app/App.tsx","store/index.ts","index.tsx","socket/actions.js"],"names":["userSlice","createSlice","name","initialState","user","credential","reducers","setUser","state","action","payload","GoogleAuthProvider","credentialFromResult","removeUser","actions","selectors","useAuth","useSelector","isAuth","LOGIN_ROUTE","VIDEOCHAT_ROUTE","CHAT_ROUTE","HOME_ROUTE","useAppDispatch","useDispatch","useAppSelector","pages","settings","Navbar","isLoggedIn","dispatch","navigate","useNavigate","React","useState","anchorElNav","setAnchorElNav","anchorElUser","setAnchorElUser","handleCloseNavMenu","event","currentTarget","textContent","handleCloseUserMenu","AppBar","position","Container","maxWidth","Toolbar","disableGutters","sx","display","xs","md","mr","Typography","variant","noWrap","fontFamily","flexGrow","fontWeight","letterSpacing","color","textDecoration","Box","IconButton","size","aria-label","aria-controls","aria-haspopup","onClick","Menu","id","anchorEl","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","open","Boolean","onClose","map","page","MenuItem","textAlign","Button","my","Tooltip","title","p","Avatar","alt","src","photoURL","mt","setting","nanoid","to","Home","memo","NotFound","app","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","initialSate","database","getDatabase","firebaseSlice","firebaseApp","Login","auth","getAuth","singInWithGoogle","useCallback","a","provider","signInWithPopup","result","console","log","Error","Grid","alignItems","justifyContent","style","height","window","innerHeight","width","background","container","direction","Chat","closeConnection","db","messagesRef","ref","messages","setMessages","inputMessage","setInputMessage","useEffect","onChildAdded","data","prev","val","border","overflowY","message","margin","uid","uID","marginLeft","padding","profile_picture","username","TextField","marginTop","fullWidth","maxRows","multiline","label","value","onChange","target","newMessagesRef","push","set","displayName","email","endIcon","socket","io","reconnetionAttempts","timeout","transports","rooms","updateRooms","createAsyncThunk","thunkAPI","setRooms","videochatSlice","videochat","ChatList","createNewRoom","v4","connectRoom","roomID","List","component","aria-labelledby","subheader","ListSubheader","ListItemButton","ListItemIcon","ListItemText","wordWrap","primary","Videochat","avalibleRooms","on","ACTIONS","SHARE_ROOMS","emit","REQUEST_ROOMS","LOCAL_VIDEO","useWebRTC","setState","callbackRef","useRef","s","updateState","newState","callback","current","prevState","useStateWithCallback","clients","updateClients","addNewClient","newClient","list","includes","peerConnections","localMediaSteam","peerMediaElements","peerID","createOffer","warn","stunServer","freeice","RTCPeerConnection","iceServers","onicecandidate","candidate","RELAY_ICE","iceCandidate","tracksCount","ontrack","streams","remoteStream","peerElement","srcObject","lms","getTracks","forEach","track","addTrack","offer","setLocalDescription","RELAY_SDP","sessionDescription","ADD_PEER","off","REMOVE_PEER","close","filter","c","remoteDescription","setRemoteDescription","RTCSessionDescription","type","createAnswer","answer","SESSION_DESCRIPTION","ICE_CANDIDATE","addIceCandidate","RTCIceCandidate","navigator","mediaDevices","getUserMedia","audio","video","min","ideal","max","stream","localVideoElement","volume","startCapture","then","JOIN","room","catch","e","error","stop","LEAVE","provideMediaRef","node","VideochatRoom","useParams","videoLayout","clientsCount","pairs","Array","from","length","reduce","acc","next","index","arr","slice","pairsCount","row","flat","layout","flexWrap","clientID","instance","autoPlay","playsInline","muted","App","path","element","replace","store","configureStore","reducer","userReducer","firebaseAppReducer","videochatReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","ignoredPaths","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.f760d476.chunk.js","sourcesContent":["// there I imported rootState from store because i use it in selectors for this inner state\n\n/* eslint-disable import/no-cycle */\n\n// Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n// doesn't actually mutate the state because it uses the Immer library,\n// which detects changes to a \"draft state\" and produces a brand new\n// immutable state based off those changes\n\n/* eslint-disable no-param-reassign */\n\n// i use action before initialization in thunk so i need it to off warning of linter\n\n/* eslint-disable @typescript-eslint/no-use-before-define */\n\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport {\n  GoogleAuthProvider,\n  OAuthCredential,\n  User,\n  UserCredential,\n} from 'firebase/auth';\nimport { RootState } from '../../types/storeTypes';\n\ninterface authorizationState {\n  user: User | null;\n  credential: OAuthCredential | null;\n}\n\nconst initialSate: authorizationState = {\n  user: null,\n  credential: null,\n};\n\nexport const userSlice = createSlice({\n  name: 'user',\n  initialState: initialSate,\n  reducers: {\n    setUser: (state, action: PayloadAction<UserCredential>) => {\n      state.user = action.payload.user;\n\n      state.credential = GoogleAuthProvider.credentialFromResult(action.payload);\n    },\n    removeUser: (state) => {\n      state.user = null;\n      state.credential = null;\n    },\n  },\n});\n\nexport const {\n  setUser,\n  removeUser,\n} = userSlice.actions;\n\nexport const selectors = {\n  getUserInfo: (state: RootState) => state.user.user,\n  getUserСredential: (state: RootState) => state.user.credential,\n};\n\nexport default userSlice.reducer;\n","import { OAuthCredential, User } from 'firebase/auth';\nimport { useSelector } from 'react-redux';\nimport { selectors } from '../store/slices/userSlice';\n\ninterface AuthUserInfo {\n  isAuth: boolean;\n  user: User | null;\n  credential: OAuthCredential | null;\n}\n\nexport const useAuth = (): AuthUserInfo => {\n  const user = useSelector(selectors.getUserInfo);\n  const credential = useSelector(selectors.getUserСredential);\n\n  return {\n    isAuth: !!user,\n    user,\n    credential,\n  };\n};\n","export const LOGIN_ROUTE = '/login';\nexport const VIDEOCHAT_ROUTE = '/videochat';\nexport const CHAT_ROUTE = '/chat';\nexport const HOME_ROUTE = '/home';\nexport const ROOT_PATH = '/';\nexport const WRONG_PATH = '*';\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport type { RootState, AppDispatch } from '../types/storeTypes';\n\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import React, { FC } from 'react';\nimport {\n  AppBar,\n  IconButton,\n  Toolbar,\n  Typography,\n  Container,\n  Box,\n  Menu,\n  MenuItem,\n  Button,\n  Tooltip,\n  Avatar,\n} from '@mui/material';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport ChatIcon from '@mui/icons-material/Chat';\nimport { NavLink, useNavigate } from 'react-router-dom';\nimport { nanoid } from 'nanoid';\nimport { LOGIN_ROUTE } from '../../utils/constansts';\nimport { useAuth } from '../../hooks/useAuth';\nimport { removeUser } from '../../store/slices/userSlice';\nimport { useAppDispatch } from '../../hooks/typedReduxHooks';\n\nconst pages = ['Chat', 'Home', 'Videochat'];\nconst settings = ['Profile', 'Logout'];\n\nexport const Navbar: FC<{}> = () => {\n  const { isAuth: isLoggedIn, user } = useAuth();\n  const dispatch = useAppDispatch();\n  const navigate = useNavigate();\n\n  const [anchorElNav, setAnchorElNav] = React.useState<null | HTMLElement>(null);\n  const [anchorElUser, setAnchorElUser] = React.useState<null | HTMLElement>(null);\n\n  const handleOpenNavMenu = (event: React.MouseEvent<HTMLElement>) => {\n    setAnchorElNav(event.currentTarget);\n  };\n\n  const handleOpenUserMenu = (event: React.MouseEvent<HTMLElement>) => {\n    setAnchorElUser(event.currentTarget);\n  };\n\n  const handleCloseNavMenu = (event: React.MouseEvent<HTMLElement>) => {\n    const target = event.currentTarget as HTMLElement;\n\n    switch (target.textContent) {\n      case 'Chat':\n        navigate('chat');\n        break;\n      case 'Home':\n        navigate('home');\n        break;\n      case 'Videochat':\n        navigate('videochat');\n        break;\n      default:\n        // throw new Error('unexpected selected menu option');\n        break;\n    }\n\n    setAnchorElNav(null);\n  };\n\n  const handleCloseUserMenu = (event: React.MouseEvent<HTMLElement>) => {\n    const target = event.currentTarget as HTMLElement;\n\n    switch (target.textContent) {\n      case 'Logout':\n        dispatch(removeUser());\n        break;\n      default:\n        // throw new Error('unexpected selected menu option');\n        break;\n    }\n\n    setAnchorElUser(null);\n  };\n\n  return (\n    <header>\n      <AppBar\n        position=\"static\"\n      >\n        <Container maxWidth=\"xl\">\n          <Toolbar disableGutters>\n            <ChatIcon sx={{ display: { xs: 'none', md: 'flex' }, mr: 1 }} />\n            <Typography\n              variant=\"h6\"\n              noWrap\n              sx={{\n                mr: 2,\n                display: { xs: 'none', md: 'flex' },\n                fontFamily: 'monospace',\n                flexGrow: 1,\n                fontWeight: 700,\n                letterSpacing: '.3rem',\n                color: 'inherit',\n                textDecoration: 'none',\n              }}\n            >\n              Chat\n            </Typography>\n\n            <Box sx={{ flexGrow: 1, display: { xs: 'flex', md: 'none' } }}>\n              <IconButton\n                size=\"large\"\n                aria-label=\"account of current user\"\n                aria-controls=\"menu-appbar\"\n                aria-haspopup=\"true\"\n                onClick={handleOpenNavMenu}\n                color=\"inherit\"\n              >\n                <MenuIcon />\n              </IconButton>\n              <Menu\n                id=\"menu-appbar\"\n                anchorEl={anchorElNav}\n                anchorOrigin={{\n                  vertical: 'bottom',\n                  horizontal: 'left',\n                }}\n                keepMounted\n                transformOrigin={{\n                  vertical: 'top',\n                  horizontal: 'left',\n                }}\n                open={Boolean(anchorElNav)}\n                onClose={handleCloseNavMenu}\n                sx={{\n                  display: { xs: 'block', md: 'none' },\n                }}\n              >\n                {pages.map((page) => (\n                  <MenuItem key={page} onClick={handleCloseNavMenu}>\n                    <Typography textAlign=\"center\">{page}</Typography>\n                  </MenuItem>\n                ))}\n              </Menu>\n            </Box>\n            <ChatIcon sx={{ display: { xs: 'flex', md: 'none' }, mr: 1 }} />\n            <Typography\n              variant=\"h5\"\n              noWrap\n              sx={{\n                mr: 2,\n                display: { xs: 'flex', md: 'none' },\n                flexGrow: 1,\n                fontFamily: 'monospace',\n                fontWeight: 700,\n                letterSpacing: '.3rem',\n                color: 'inherit',\n                textDecoration: 'none',\n              }}\n            >\n              Chat\n            </Typography>\n            <Box sx={{ flexGrow: 1, display: { xs: 'none', md: 'flex' } }}>\n              {pages.map((page) => (\n                <Button\n                  key={page}\n                  onClick={handleCloseNavMenu}\n                  sx={{ my: 2, color: 'white', display: 'block' }}\n                >\n                  {page}\n                </Button>\n              ))}\n            </Box>\n\n            <Box sx={{ flexGrow: 0 }}>\n              {\n                isLoggedIn && user\n                  ? (\n                    <>\n                      <Tooltip title=\"Open settings\">\n                        <IconButton onClick={handleOpenUserMenu} sx={{ p: 0 }}>\n                          <Avatar alt=\"Remy Sharp\" src={user.photoURL || ''} />\n                        </IconButton>\n                      </Tooltip>\n                      <Menu\n                        sx={{ mt: '45px' }}\n                        id=\"menu-appbar\"\n                        anchorEl={anchorElUser}\n                        anchorOrigin={{\n                          vertical: 'top',\n                          horizontal: 'right',\n                        }}\n                        keepMounted\n                        transformOrigin={{\n                          vertical: 'top',\n                          horizontal: 'right',\n                        }}\n                        open={Boolean(anchorElUser)}\n                        onClose={handleCloseUserMenu}\n                      >\n                        {settings.map((setting) => (\n                          <MenuItem key={nanoid()} onClick={handleCloseUserMenu}>\n                            <Typography textAlign=\"center\">{setting}</Typography>\n                          </MenuItem>\n                        ))}\n                      </Menu>\n                    </>\n                  )\n                  : (\n                    <Button>\n                      <NavLink to={LOGIN_ROUTE}>\n                        Login\n                      </NavLink>\n                    </Button>\n                  )\n              }\n            </Box>\n          </Toolbar>\n        </Container>\n      </AppBar>\n    </header>\n  );\n};\n","import React, { FC, memo } from 'react';\n\nexport const Home: FC<{}> = memo(() => {\n  return (\n    <div>\n      <h1>HOME PAGE</h1>\n    </div>\n  );\n});\n","import React, { FC } from 'react';\n\nexport const NotFound: FC<{}> = React.memo(() => {\n  return (\n    <div>\n      <h1>NOT FOUND PAGE</h1>\n    </div>\n  );\n});\n","// there I imported rootState from store because i use it in selectors for this inner state\n\n/* eslint-disable import/no-cycle */\n\n// Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n// doesn't actually mutate the state because it uses the Immer library,\n// which detects changes to a \"draft state\" and produces a brand new\n// immutable state based off those changes\n\n/* eslint-disable no-param-reassign */\n\n// i use action before initialization in thunk so i need it to off warning of linter\n\n/* eslint-disable @typescript-eslint/no-use-before-define */\n\nimport { createSlice } from '@reduxjs/toolkit';\nimport { FirebaseApp, initializeApp } from 'firebase/app';\nimport { Database, getDatabase } from 'firebase/database';\nimport { RootState } from '../../types/storeTypes';\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\n  measurementId: process.env.REACT_APP_FIREBASE_MEASUREMENT_ID,\n};\n\nconst app = initializeApp(firebaseConfig);\nconst database = getDatabase(app, process.env.REACT_APP_FIREBASE_DATABASE_URL);\n\ninterface authorizationState {\n  app: FirebaseApp | undefined;\n  database: Database;\n}\n\nconst initialSate: authorizationState = {\n  app,\n  database,\n};\n\nexport const firebaseSlice = createSlice({\n  name: 'firebase',\n  initialState: initialSate,\n  reducers: {\n  },\n});\n\nexport const selectors = {\n  getFirebaseApp: (state: RootState) => state.firebaseApp.app,\n  getDatabase: (state: RootState) => state.firebaseApp.database,\n};\n\nexport default firebaseSlice.reducer;\n","import {\n  Box,\n  Button,\n  Container,\n  Grid,\n} from '@mui/material';\nimport React, {\n  FC,\n  memo,\n  useCallback,\n} from 'react';\nimport { useSelector } from 'react-redux';\nimport { getAuth, signInWithPopup, GoogleAuthProvider } from 'firebase/auth';\nimport { useNavigate } from 'react-router-dom';\nimport { CHAT_ROUTE } from '../../utils/constansts';\nimport { useAppDispatch } from '../../hooks/typedReduxHooks';\nimport { selectors } from '../../store/slices/firebaseSlice';\nimport { setUser } from '../../store/slices/userSlice';\n\nexport const Login: FC<{}> = memo(() => {\n  const app = useSelector(selectors.getFirebaseApp);\n  const auth = getAuth(app);\n  const dispatch = useAppDispatch();\n  const navigate = useNavigate();\n\n  const singInWithGoogle = useCallback(async () => {\n    try {\n      const provider = new GoogleAuthProvider();\n\n      const result = await signInWithPopup(auth, provider);\n\n      dispatch(setUser(result));\n      navigate(CHAT_ROUTE);\n    } catch (e) {\n      // eslint-disable-next-line no-console\n      console.log(e);\n      throw new Error('some issue with sing in with google');\n    }\n  }, [auth, navigate]);\n\n  return (\n    <Container>\n      <Grid\n        alignItems=\"center\"\n        justifyContent=\"center\"\n        display=\"flex\"\n        style={{ height: window.innerHeight - 64 }}\n      >\n        <Grid\n          style={{ width: 400, background: 'lightgray' }}\n          container\n          alignItems=\"center\"\n          direction=\"column\"\n        >\n          <Box p={5}>\n            <Button variant=\"outlined\" onClick={singInWithGoogle}>Sing in with google</Button>\n          </Box>\n        </Grid>\n      </Grid>\n    </Container>\n  );\n});\n","/* eslint-disable @typescript-eslint/no-unused-vars */\nimport {\n  Avatar,\n  Button,\n  Container,\n  Grid,\n  TextField,\n} from '@mui/material';\nimport React, {\n  FC,\n  memo,\n  useCallback,\n  useEffect,\n  useState,\n} from 'react';\nimport { useSelector } from 'react-redux';\nimport {\n  ref,\n  set,\n  push,\n  onChildAdded,\n  Unsubscribe,\n} from 'firebase/database';\nimport SendIcon from '@mui/icons-material/Send';\nimport { nanoid } from 'nanoid';\nimport { useAuth } from '../../hooks/useAuth';\nimport { selectors } from '../../store/slices/firebaseSlice';\nimport { Message } from '../../types/message';\n\nexport const Chat: FC<{}> = memo(() => {\n  const { user } = useAuth();\n  const db = useSelector(selectors.getDatabase);\n  const messagesRef = ref(db, 'posts');\n  const [messages, setMessages] = useState<Array<Message>>([]);\n\n  const [inputMessage, setInputMessage] = useState('');\n\n  const writeMessageToDB = () => {\n    const newMessagesRef = push(messagesRef);\n\n    set(newMessagesRef, {\n      uID: user?.uid,\n      username: user?.displayName,\n      email: user?.email,\n      profile_picture: user?.photoURL,\n      message: inputMessage,\n    });\n\n    setInputMessage('');\n  };\n\n  let closeConnection: Unsubscribe;\n\n  useEffect(() => {\n    closeConnection = onChildAdded(messagesRef, (data) => {\n      setMessages((prev: Array<Message>) => [...prev, data.val() as Message]);\n    });\n  }, []);\n\n  useEffect(() => {\n    return () => {\n      closeConnection();\n    };\n  }, []);\n\n  return (\n    <Container>\n      <Grid\n        container\n        alignItems=\"center\"\n        justifyContent=\"center\"\n        direction=\"column\"\n        display=\"flex\"\n        style={{ height: window.innerHeight - 64 }}\n      >\n        <div\n          style={{\n            width: '80%',\n            height: '70vh',\n            border: '1px solid gray',\n            overflowY: 'auto',\n          }}\n        >\n          {messages.map(message => (\n            <div\n              key={nanoid()}\n              style={{\n                margin: 10,\n                border: user?.uid === message.uID ? '2px solid green' : '2px solid red',\n                marginLeft: user?.uid === message.uID ? 'auto' : '10px',\n                width: 'fit-content',\n                padding: 5,\n              }}\n            >\n              <Grid container>\n                <Avatar src={message.profile_picture} />\n                <div>{message.username}</div>\n              </Grid>\n              <div>\n                {message.message}\n              </div>\n            </div>\n          ))}\n        </div>\n\n        <Grid\n          container\n          alignItems=\"flex-end\"\n          direction=\"column\"\n          style={{ width: '80%' }}\n        >\n          <TextField\n            style={{ marginTop: 10 }}\n            fullWidth\n            maxRows={1}\n            multiline\n            size=\"small\"\n            id=\"outlined-basic\"\n            label=\"Enter message\"\n            variant=\"outlined\"\n            value={inputMessage}\n            onChange={({ target }) => setInputMessage(target.value)}\n          />\n          <Button\n            variant=\"contained\"\n            size=\"small\"\n            onClick={writeMessageToDB}\n            endIcon={<SendIcon />}\n          >\n            Send\n          </Button>\n        </Grid>\n      </Grid>\n    </Container>\n  );\n});\n","import { io } from 'socket.io-client';\n\nconst options = {\n  'force new connection': true,\n  reconnetionAttempts: 'Infinity',\n  timeout: 15000,\n  transports: ['websocket'],\n};\n\nconst socket = io(process.env.REACT_APP_SIGNAL_SERVER_URL || '', options);\n\nexport default socket;\n","// there I imported rootState from store because i use it in selectors for this inner state\n\n/* eslint-disable import/no-cycle */\n\n// Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n// doesn't actually mutate the state because it uses the Immer library,\n// which detects changes to a \"draft state\" and produces a brand new\n// immutable state based off those changes\n\n/* eslint-disable no-param-reassign */\n\n// i use action before initialization in thunk so i need it to off warning of linter\n\n/* eslint-disable @typescript-eslint/no-use-before-define */\n\nimport { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport {\n} from 'firebase/auth';\nimport { Socket } from 'socket.io-client';\nimport { RootState } from '../../types/storeTypes';\nimport ACTIONS from '../../socket/actions';\nimport socket from '../../socket';\n\ninterface ChatState {\n  socket: Socket;\n  rooms: Array<string>;\n}\n\nconst initialSate: ChatState = {\n  socket,\n  rooms: [],\n};\n\nexport const updateRooms = createAsyncThunk(\n  'videochat/updateRooms',\n  async (rooms :Array<string>, thunkAPI) => {\n    const { dispatch } = thunkAPI;\n\n    dispatch(setRooms(rooms));\n  },\n);\n\nexport const requestCurrentRooms = () => {\n  socket.emit(ACTIONS.REQUEST_ROOMS);\n};\n\nexport const videochatSlice = createSlice({\n  name: 'videochat',\n  initialState: initialSate,\n  reducers: {\n    setRooms: (state, action: PayloadAction<Array<string>>) => {\n      state.rooms = action.payload;\n    },\n  },\n});\n\nexport const {\n  setRooms,\n} = videochatSlice.actions;\n\nexport const selectors = {\n  getRooms: (state: RootState) => state.videochat.rooms,\n  getSocket: (state: RootState) => state.videochat.socket,\n};\n\nexport default videochatSlice.reducer;\n","/* eslint-disable @typescript-eslint/no-unused-vars */\nimport React, { FC, memo, useCallback } from 'react';\nimport {\n  Button,\n  Container,\n  Grid,\n  List,\n  ListItemButton,\n  ListItemIcon,\n  ListItemText,\n  ListSubheader,\n  Tooltip,\n} from '@mui/material';\nimport VideoCameraFrontIcon from '@mui/icons-material/VideoCameraFront';\nimport RocketLaunchIcon from '@mui/icons-material/RocketLaunch';\nimport AddBoxIcon from '@mui/icons-material/AddBox';\nimport { useNavigate } from 'react-router-dom';\nimport { v4 } from 'uuid';\nimport { VIDEOCHAT_ROUTE } from '../../utils/constansts';\n\ninterface Props {\n  rooms: Array<string>;\n}\n\nexport const ChatList:FC<Props> = memo(({ rooms }) => {\n  const navigate = useNavigate();\n\n  const createNewRoom = useCallback(() => {\n    navigate(`${VIDEOCHAT_ROUTE}/${v4()}`);\n  }, []);\n\n  const connectRoom = useCallback((roomID: string) => {\n    navigate(`${VIDEOCHAT_ROUTE}/${roomID}`);\n  }, []);\n\n  return (\n    <Container>\n      <Grid\n        container\n        alignItems=\"center\"\n        justifyContent=\"center\"\n        direction=\"column\"\n        display=\"flex\"\n        style={{ height: window.innerHeight - 68 }}\n      >\n        <List\n          sx={{\n            width: '100%',\n            overflowY: 'auto',\n            height: '70vh',\n            padding: 0,\n          }}\n          component=\"nav\"\n          aria-labelledby=\"avalible-rooms\"\n          subheader={(\n            <ListSubheader\n              component=\"div\"\n              id=\"nested-list-subheader\"\n            >\n              Avalible rooms\n            </ListSubheader>\n          )}\n        >\n\n          {rooms.map((roomID) => (\n            <Tooltip title=\"Click to join room\" key={roomID}>\n              <ListItemButton\n                onClick={() => {\n                  connectRoom(roomID);\n                }}\n              >\n                <ListItemIcon>\n                  <VideoCameraFrontIcon />\n                </ListItemIcon>\n                <ListItemText\n                  sx={{ wordWrap: 'break-word' }}\n                  primary={roomID}\n                />\n                <ListItemIcon>\n                  <RocketLaunchIcon />\n                </ListItemIcon>\n              </ListItemButton>\n            </Tooltip>\n          ))}\n        </List>\n        <Button\n          variant=\"outlined\"\n          endIcon={<AddBoxIcon />}\n          onClick={createNewRoom}\n        >\n          Create room\n        </Button>\n      </Grid>\n    </Container>\n  );\n});\n","import React, { FC, memo, useEffect } from 'react';\nimport { useAppDispatch, useAppSelector } from '../../hooks/typedReduxHooks';\nimport {\n  selectors,\n  requestCurrentRooms,\n  updateRooms,\n} from '../../store/slices/videochatSlice';\nimport ACTIONS from '../../socket/actions';\nimport { ChatList } from '../../components/chatList';\n\nexport const Videochat: FC<{}> = memo(() => {\n  const avalibleRooms = useAppSelector(selectors.getRooms);\n  const socket = useAppSelector(selectors.getSocket);\n  const dispatch = useAppDispatch();\n\n  useEffect(() => {\n    socket.on(ACTIONS.SHARE_ROOMS, ({ rooms = [] } = {}) => {\n      dispatch(updateRooms(rooms));\n    });\n    requestCurrentRooms();\n  }, []);\n\n  return (\n    <ChatList rooms={avalibleRooms} />\n  );\n});\n","/* eslint-disable consistent-return */\n/* eslint-disable no-console */\n/* eslint-disable @typescript-eslint/no-unused-vars */\nimport { useRef, useEffect, useCallback } from 'react';\nimport freeice from 'freeice';\nimport { useStateWithCallback } from './useStateWithCallback';\nimport socket from '../socket';\nimport ACTIONS from '../socket/actions';\n\nexport const LOCAL_VIDEO = 'LOCAL_VIDEO';\n\ntype PeerMediaElement = {\n  volume: number;\n  srcObject: object;\n} | null;\n\ntype Payload = {\n  [key: string]: any,\n};\n\ninterface PeerMediaElements {\n  [key: string]: PeerMediaElement | null;\n}\n\nexport const useWebRTC = (roomID: string) => {\n  const [clients, updateClients] = useStateWithCallback([]);\n\n  const addNewClient = useCallback((newClient, callback) => {\n    updateClients(list => {\n      if (!list.includes(newClient)) {\n        return [...list, newClient];\n      }\n\n      return list;\n    }, callback);\n    // if (!clients.includes(newClient)) {\n    //   updateClients((arr: any) => [...arr, newClient], callback);\n    // }\n  }, [clients, updateClients]);\n\n  const peerConnections = useRef<{[key: string]: RTCPeerConnection}>({});\n  const localMediaSteam = useRef<MediaStream | null>(null);\n  const peerMediaElements = useRef<PeerMediaElements>({\n    [LOCAL_VIDEO]: null,\n  });\n\n  useEffect(() => {\n    async function handleNewPeer(payload: Payload) {\n      const { peerID, createOffer } = payload;\n\n      if (peerID in peerConnections.current) {\n        return console.warn(`Already connected to peer ${peerID}`);\n      }\n\n      const stunServer = freeice();\n\n      console.log(stunServer);\n\n      peerConnections.current[peerID] = new RTCPeerConnection({\n        iceServers: stunServer,\n      });\n\n      console.log('peer connection was created');\n\n      peerConnections.current[peerID].onicecandidate = event => {\n        if (event.candidate) {\n          socket.emit(ACTIONS.RELAY_ICE, {\n            peerID,\n            iceCandidate: event.candidate,\n          });\n        }\n      };\n\n      let tracksCount = 0;\n\n      peerConnections.current[peerID].ontrack = async ({ streams: [remoteStream] }) => {\n        tracksCount += 1;\n\n        // i wait when video & audio track is received\n        if (tracksCount === 2) {\n          tracksCount = 0;\n          addNewClient(peerID, () => {\n            const peerElement = peerMediaElements.current[peerID];\n\n            if (peerElement) {\n              peerElement.srcObject = remoteStream;\n            }\n          });\n        }\n      };\n\n      const lms = localMediaSteam.current;\n\n      if (lms) {\n        lms.getTracks().forEach(track => {\n          peerConnections.current[peerID].addTrack(track, lms);\n        });\n      }\n\n      if (createOffer) {\n        const offer = await peerConnections.current[peerID].createOffer();\n\n        await peerConnections.current[peerID].setLocalDescription(offer);\n\n        socket.emit(ACTIONS.RELAY_SDP, {\n          peerID,\n          sessionDescription: offer,\n        });\n      }\n    }\n\n    socket.on(ACTIONS.ADD_PEER, handleNewPeer);\n\n    return () => {\n      socket.off(ACTIONS.ADD_PEER);\n    };\n  }, []);\n\n  useEffect(() => {\n    const handleRemovePeer = (payload: Payload) => {\n      const { peerID } = payload;\n\n      if (peerConnections.current[peerID]) {\n        peerConnections.current[peerID].close();\n      }\n\n      delete peerConnections.current[peerID];\n      delete peerMediaElements.current[peerID];\n\n      updateClients((list: Array<string>) => list.filter(c => c !== peerID));\n    };\n\n    socket.on(ACTIONS.REMOVE_PEER, handleRemovePeer);\n\n    return () => {\n      socket.off(ACTIONS.REMOVE_PEER);\n    };\n  }, []);\n\n  useEffect(() => {\n    async function setRemoteMedia(payload: Payload) {\n      const { peerID, sessionDescription: remoteDescription } = payload;\n\n      console.log('session description');\n\n      await peerConnections.current[peerID].setRemoteDescription(\n        new RTCSessionDescription(remoteDescription),\n      );\n\n      if (remoteDescription.type === 'offer') {\n        const answer = await peerConnections.current[peerID].createAnswer();\n\n        await peerConnections.current[peerID].setLocalDescription(answer);\n\n        socket.emit(ACTIONS.RELAY_SDP, {\n          peerID,\n          sessionDescription: answer,\n        });\n      }\n    }\n\n    socket.on(ACTIONS.SESSION_DESCRIPTION, setRemoteMedia);\n\n    return () => {\n      socket.off(ACTIONS.SESSION_DESCRIPTION);\n    };\n  }, []);\n\n  useEffect(() => {\n    socket.on(ACTIONS.ICE_CANDIDATE, ({ peerID, iceCandidate }) => {\n      console.log('ice candidate');\n      peerConnections.current[peerID].addIceCandidate(\n        new RTCIceCandidate(iceCandidate),\n      );\n    });\n\n    return () => {\n      socket.off(ACTIONS.ICE_CANDIDATE);\n    };\n  }, []);\n\n  useEffect(() => {\n    async function startCapture() {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        audio: true,\n        video: {\n          width: { min: 1024, ideal: 1280, max: 1920 },\n          height: { min: 576, ideal: 720, max: 1080 },\n        },\n      });\n\n      localMediaSteam.current = stream;\n\n      addNewClient(LOCAL_VIDEO, () => {\n        const localVideoElement = peerMediaElements.current[LOCAL_VIDEO];\n\n        if (localVideoElement && localMediaSteam.current) {\n          localVideoElement.volume = 0;\n          localVideoElement.srcObject = localMediaSteam.current;\n        }\n      });\n    }\n\n    startCapture()\n      .then(() => socket.emit(ACTIONS.JOIN, { room: roomID }))\n      .catch(e => console.error('Error getting userMedia', e));\n\n    return () => {\n      if (localMediaSteam && localMediaSteam.current) {\n        localMediaSteam.current.getTracks().forEach(track => {\n          track.stop();\n        });\n        socket.emit(ACTIONS.LEAVE);\n      }\n    };\n  }, [roomID]);\n\n  const provideMediaRef = useCallback((id, node) => {\n    peerMediaElements.current[id] = node;\n  }, []);\n\n  return { clients, provideMediaRef };\n};\n","import {\n  useCallback,\n  useEffect,\n  useRef,\n  useState,\n} from 'react';\n\nexport const useStateWithCallback = (initialState: any) => {\n  const [state, setState] = useState(initialState);\n\n  // if i set null here - stupid TS linter says:\n  // \"This expression is not callable.\n\n  // Type 'never' has no call signatures.ts(2349)\"\n  // so i paste anon func\n\n  const callbackRef = useRef((s: any) => s);\n\n  const updateState = useCallback((newState, callback) => {\n    callbackRef.current = callback;\n\n    setState((prevState: any) => (\n      typeof newState === 'function' ? newState(prevState) : newState\n    ));\n  }, []);\n\n  useEffect(() => {\n    if (callbackRef.current) {\n      callbackRef.current(state);\n    }\n  }, [state]);\n\n  return [state, updateState];\n};\n","/* eslint-disable @typescript-eslint/no-unused-vars */\n/* eslint-disable jsx-a11y/media-has-caption */\nimport { Container } from '@mui/system';\nimport React, { FC, memo } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { LOCAL_VIDEO, useWebRTC } from '../../hooks/useWebRTC';\n\nfunction layout(clientsCount = 1) {\n  const pairs = Array.from<any>({ length: clientsCount })\n    .reduce((acc, next, index, arr) => {\n      if (index % 2 === 0) {\n        acc.push(arr.slice(index, index + 2));\n      }\n\n      return acc;\n    }, []);\n\n  const pairsCount = pairs.length;\n  const height = `${100 / pairsCount}%`;\n\n  return pairs.map((row: Array<any>, index: number, arr: Array<any>) => {\n    if (index === arr.length - 1 && row.length === 1) {\n      return [{\n        width: '100%',\n        height,\n      }];\n    }\n\n    return row.map(() => ({\n      width: '50%',\n      height,\n    }));\n  }).flat();\n}\n\nexport const VideochatRoom: FC<{}> = memo(() => {\n  const roomID = useParams().id || '';\n\n  const { clients, provideMediaRef } = useWebRTC(roomID);\n  const videoLayout = layout(clients.length);\n\n  return (\n    <Container>\n      <h1>Videochat room</h1>\n      <h1>{roomID}</h1>\n      <div\n        style={{\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          flexWrap: 'wrap',\n          height: '70vh',\n        }}\n      >\n        {clients.map((clientID: string, index: number) => (\n          <div key={clientID} style={videoLayout[index]}>\n            <video\n              ref={(instance) => {\n                provideMediaRef(clientID, instance);\n              }}\n              width=\"100%\"\n              height=\"100%\"\n              autoPlay\n              playsInline\n              muted={clientID === LOCAL_VIDEO}\n            />\n          </div>\n        ))}\n      </div>\n    </Container>\n  );\n});\n","import React, { FC, memo } from 'react';\nimport { Navigate, Route, Routes } from 'react-router-dom';\nimport { useAuth } from '../../hooks/useAuth';\nimport { Navbar } from '../nav';\nimport {\n  ROOT_PATH,\n  WRONG_PATH,\n  HOME_ROUTE,\n  LOGIN_ROUTE,\n  CHAT_ROUTE,\n  VIDEOCHAT_ROUTE,\n} from '../../utils/constansts';\n\nimport { Home } from '../../pages/home';\nimport { NotFound } from '../../pages/notFound';\nimport { Login } from '../../pages/login';\nimport { Chat } from '../../pages/chat';\n\n// import { AppRouter } from '../appRouter';\nimport './App.scss';\nimport { Videochat } from '../../pages/videochat';\nimport { VideochatRoom } from '../../pages/videochatRoom';\n\nexport const App: FC<{}> = memo(() => {\n  const { isAuth: isLoggedIn } = useAuth();\n\n  return (\n    <>\n      <Navbar />\n      {/* <AppRouter /> */}\n      {isLoggedIn\n        ? (\n          <Routes>\n            <Route path={ROOT_PATH} element={<Navigate to={HOME_ROUTE} replace />} />\n\n            <Route path={HOME_ROUTE} element={<Home />} />\n            <Route path={VIDEOCHAT_ROUTE} element={<Videochat />} />\n            <Route path={`${VIDEOCHAT_ROUTE}/:id`} element={<VideochatRoom />} />\n            <Route path={CHAT_ROUTE} element={<Chat />} />\n\n            <Route path={WRONG_PATH} element={<NotFound />} />\n          </Routes>\n        )\n        : (\n          <Routes>\n            <Route path={ROOT_PATH} element={<Navigate to={HOME_ROUTE} replace />} />\n\n            <Route path={HOME_ROUTE} element={<Home />} />\n            <Route path={LOGIN_ROUTE} element={<Login />} />\n\n            <Route path={WRONG_PATH} element={<NotFound />} />\n          </Routes>\n        )}\n    </>\n  );\n});\n","/* eslint-disable import/no-cycle */\nimport { configureStore } from '@reduxjs/toolkit';\nimport userReducer from './slices/userSlice';\nimport firebaseAppReducer from './slices/firebaseSlice';\nimport videochatReducer from './slices/videochatSlice';\n\nexport const store = configureStore({\n  reducer: {\n    user: userReducer,\n    firebaseApp: firebaseAppReducer,\n    videochat: videochatReducer,\n  },\n  middleware: (getDefaultMiddleware) => getDefaultMiddleware({\n    serializableCheck: {\n      // Ignore these action types\n      ignoredActions: ['user/setUser'],\n      // Ignore these field paths in all actions\n      // ignoredActionPaths: ['meta.arg', 'payload.timestamp'],\n      // Ignore these paths in the state\n      ignoredPaths: [\n        'user.user',\n        'user.credential',\n        'firebaseApp.app',\n        'firebaseApp.database',\n        'videochat.socket',\n      ],\n    },\n  }),\n});\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { App } from './components/app';\nimport { store } from './store';\n\nimport './index.scss';\n\nReactDOM.render(\n  <HashRouter>\n    <Provider store={store}>\n      <React.StrictMode>\n        <App />\n      </React.StrictMode>\n    </Provider>\n  </HashRouter>,\n  document.getElementById('root'),\n);\n","const ACTIONS = {\n  JOIN: 'join',\n  LEAVE: 'leave',\n  SHARE_ROOMS: 'share-rooms',\n  REQUEST_ROOMS: 'request-rooms',\n  ADD_PEER: 'add-peer',\n  REMOVE_PEER: 'remove-peer',\n  RELAY_SDP: 'relay-sdp',\n  RELAY_ICE: 'relay-ice',\n  ICE_CANDIDATE: 'ice-candidate',\n  SESSION_DESCRIPTION: 'session-desription',\n};\n\nmodule.exports = ACTIONS;\n"],"sourceRoot":""}