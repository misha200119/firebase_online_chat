{"version":3,"sources":["store/slices/userSlice.ts","hooks/useAuth.ts","hooks/typedReduxHooks.ts","pages/login/Login.tsx","store/slices/firebaseSlice.ts","pages/chat/Chat.tsx","pages/home/Home.tsx","socket/index.ts","store/slices/videochatSlice.ts","components/chatList/ChatList.tsx","pages/videochat/Videochat.tsx","pages/notFound/NotFound.tsx","hooks/useWebRTC.ts","hooks/useStateWithCallback.ts","components/video/Video.tsx","pages/videochatRoom/VideochatRoom.tsx","utils/routes.tsx","components/nav/Navbar.tsx","components/appRouter/AppRouter.tsx","components/app/App.tsx","store/index.ts","index.tsx","socket/actions.js"],"names":["userSlice","createSlice","name","initialState","user","credential","auth","reducers","setUser","state","action","userCredentials","payload","credentials","GoogleAuthProvider","credentialFromResult","setAuth","setDirectlyUser","removeUser","actions","selectors","useAuth","useSelector","isAuth","useAppDispatch","useDispatch","useAppSelector","Login","memo","navigate","useNavigate","singInWithGoogle","useCallback","a","provider","signInWithPopup","RoutesURLs","HOME","console","log","Error","Container","Grid","alignItems","justifyContent","display","style","height","window","innerHeight","onClick","app","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","initialSate","database","getDatabase","firebaseSlice","firebaseApp","Chat","closeConnection","db","messagesRef","ref","useState","messages","setMessages","messagesDisplayBoxRef","useRef","inputMessage","setInputMessage","writeMessageToDB","trim","newMessagesRef","push","set","uID","uid","username","displayName","email","profile_picture","photoURL","message","useEffect","onChildAdded","data","prev","val","current","scrollTop","scrollHeight","container","direction","maxHeight","className","map","gridGap","padding","flexDirection","Avatar","src","nanoid","width","TextField","marginTop","fullWidth","maxRows","multiline","size","InputProps","endAdornment","IconButton","color","aria-label","component","id","label","variant","value","onChange","event","target","onKeyDown","code","ctrlKey","preventDefault","Home","socket","io","reconnetionAttempts","timeout","transports","rooms","updateRooms","createAsyncThunk","thunkAPI","dispatch","setRooms","videochatSlice","videochat","ChatList","createNewRoom","VIDEOCHAT","v4","connectRoom","roomID","List","sx","overflowY","aria-labelledby","subheader","ListSubheader","Tooltip","title","ListItemButton","ListItemIcon","ListItemText","wordWrap","primary","Button","endIcon","Videochat","avalibleRooms","on","ACTIONS","SHARE_ROOMS","emit","REQUEST_ROOMS","NotFound","React","LOCAL_VIDEO","useWebRTC","setState","callbackRef","s","updateState","newState","callback","prevState","useStateWithCallback","clients","updateClients","addNewClient","newClient","list","includes","peerConnections","localMediaSteam","peerMediaElements","peerID","createOffer","warn","stunServer","freeice","RTCPeerConnection","iceServers","onicecandidate","candidate","RELAY_ICE","iceCandidate","tracksCount","ontrack","streams","remoteStream","peerElement","srcObject","lms","getTracks","forEach","track","addTrack","offer","setLocalDescription","RELAY_SDP","sessionDescription","ADD_PEER","off","REMOVE_PEER","close","filter","c","remoteDescription","setRemoteDescription","RTCSessionDescription","type","createAnswer","answer","SESSION_DESCRIPTION","ICE_CANDIDATE","addIceCandidate","RTCIceCandidate","navigator","mediaDevices","getUserMedia","audio","video","min","ideal","max","stream","localVideoElement","volume","startCapture","then","JOIN","room","catch","e","error","stop","LEAVE","provideMediaRef","node","deviceMuteSetter","isTurnOn","device","tracks","audioTrack","find","kind","enabled","videoTrack","Video","clientID","containerLayoutStyle","isMuted","setIsMuted","borderRadius","overflow","position","instance","autoPlay","playsInline","muted","ToggleButton","selected","bottom","left","marginBottom","VideochatRoom","useParams","videoLayout","clientsCount","pairs","Array","from","length","reduce","acc","next","index","arr","slice","pairsCount","row","flat","layout","isMicrophoneMuted","setIsMicrophoneMuted","isCameraOff","setIsCameraOff","flexWrap","replace","fontSize","Pages","UserSettingsDropdown","publicRoutes","path","ROOT","to","LOGIN","WRONG","privateRoutes","concat","CHAT","VIDEOCHAT_ROOM","Navbar","isLoggedIn","anchorElNav","setAnchorElNav","anchorElUser","setAnchorElUser","handleCloseNavMenu","page","toLowerCase","handleCloseUserMenu","setting","LOGOUT","signOut","AppBar","maxWidth","Toolbar","disableGutters","xs","md","mr","Typography","noWrap","fontFamily","flexGrow","fontWeight","letterSpacing","textDecoration","Box","aria-controls","aria-haspopup","currentTarget","Menu","anchorEl","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","open","Boolean","onClose","Object","values","MenuItem","textAlign","p","alt","mt","AppRouter","element","App","getAuth","unsubscribe","onAuthStateChanged","store","configureStore","reducer","userReducer","firebaseAppReducer","videochatReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","ignoredPaths","ReactDOM","render","StrictMode","document","getElementById","module","exports","USER_MUTED"],"mappings":"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","file":"static/js/main.a58365ba.chunk.js","sourcesContent":["/* eslint-disable max-len */\n// there I imported rootState from store because i use it in selectors for this inner state\n\n/* eslint-disable import/no-cycle */\n\n// Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n// doesn't actually mutate the state because it uses the Immer library,\n// which detects changes to a \"draft state\" and produces a brand new\n// immutable state based off those changes\n\n/* eslint-disable no-param-reassign */\n\n// i use action before initialization in thunk so i need it to off warning of linter\n\n/* eslint-disable @typescript-eslint/no-use-before-define */\n\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport {\n  Auth,\n  GoogleAuthProvider,\n  OAuthCredential,\n  // reauthenticateWithCredential,\n  User,\n  UserCredential,\n} from 'firebase/auth';\nimport { RootState } from '../../types/storeTypes';\n\n// const credentialsFromLocalStorage = JSON.parse(localStorage.getItem(LocalStorageKeys.AUTH_CREDENTIALS) as string);\n// const userCredentialsFromLocalStorage = JSON.parse(localStorage.getItem(LocalStorageKeys.USER_CREDENTIALS) as string);\n// const lastSignedUser = reauthenticateWithCredential(userCredentialsFromLocalStorage, credentialsFromLocalStorage);\n\n// eslint-disable-next-line no-console\n// console.log(lastSignedUser);\n\ninterface authorizationState {\n  user: User | null;\n  credential: OAuthCredential | null;\n  auth: Auth | null;\n}\n\nconst initialSate: authorizationState = {\n  user: null,\n  credential: null,\n  auth: null,\n};\n\nexport const userSlice = createSlice({\n  name: 'user',\n  initialState: initialSate,\n  reducers: {\n    setUser: (state, action: PayloadAction<UserCredential>) => {\n      const userCredentials = action.payload.user;\n      const credentials = GoogleAuthProvider.credentialFromResult(action.payload);\n\n      state.user = userCredentials;\n      state.credential = credentials;\n    },\n    setAuth: (state, action: PayloadAction<Auth>) => {\n      state.auth = action.payload;\n    },\n    setDirectlyUser: (state, action: PayloadAction<User>) => {\n      state.user = action.payload;\n    },\n    removeUser: (state) => {\n      state.user = null;\n      state.credential = null;\n    },\n  },\n});\n\nexport const {\n  setUser,\n  removeUser,\n  setDirectlyUser,\n  setAuth,\n} = userSlice.actions;\n\nexport const selectors = {\n  getUserInfo: (state: RootState) => state.user.user,\n  getUserСredential: (state: RootState) => state.user.credential,\n  getAuth: (state: RootState) => state.user.auth,\n};\n\nexport default userSlice.reducer;\n","import { Auth, OAuthCredential, User } from 'firebase/auth';\nimport { useSelector } from 'react-redux';\nimport { selectors } from '../store/slices/userSlice';\n\ninterface AuthUserInfo {\n  isAuth: boolean;\n  user: User | null;\n  credential: OAuthCredential | null;\n  auth: Auth | null;\n}\n\nexport const useAuth = (): AuthUserInfo => {\n  const user = useSelector(selectors.getUserInfo);\n  const credential = useSelector(selectors.getUserСredential);\n  const auth = useSelector(selectors.getAuth);\n\n  return {\n    isAuth: !!user,\n    user,\n    credential,\n    auth,\n  };\n};\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport type { RootState, AppDispatch } from '../types/storeTypes';\n\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import React, {\n  FC,\n  memo,\n  useCallback,\n} from 'react';\nimport {\n  Container,\n  Grid,\n} from '@mui/material';\nimport GoogleButton from 'react-google-button';\nimport { useSelector } from 'react-redux';\nimport { signInWithPopup, GoogleAuthProvider } from 'firebase/auth';\nimport { useNavigate } from 'react-router-dom';\nimport { selectors } from '../../store/slices/userSlice';\n// eslint-disable-next-line import/no-cycle\nimport { RoutesURLs } from '../../utils/routes';\n\nexport const Login: FC<{}> = memo(() => {\n  const auth = useSelector(selectors.getAuth);\n  const navigate = useNavigate();\n\n  const singInWithGoogle = useCallback(async () => {\n    try {\n      const provider = new GoogleAuthProvider();\n\n      // auth cannot be a null because it creates in root App component\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      await signInWithPopup(auth!, provider);\n      // auth sing in listener in App component check if somebody connects\n      navigate(RoutesURLs.HOME);\n    } catch (e) {\n      // eslint-disable-next-line no-console\n      console.log(e);\n      throw new Error('some issue with sing in with google');\n    }\n  }, [auth, navigate]);\n\n  return (\n    <Container>\n      <Grid\n        alignItems=\"center\"\n        justifyContent=\"center\"\n        display=\"flex\"\n        style={{ height: window.innerHeight - 64 }}\n      >\n        <GoogleButton onClick={singInWithGoogle} />\n      </Grid>\n    </Container>\n  );\n});\n","// there I imported rootState from store because i use it in selectors for this inner state\n\n/* eslint-disable import/no-cycle */\n\n// Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n// doesn't actually mutate the state because it uses the Immer library,\n// which detects changes to a \"draft state\" and produces a brand new\n// immutable state based off those changes\n\n/* eslint-disable no-param-reassign */\n\n// i use action before initialization in thunk so i need it to off warning of linter\n\n/* eslint-disable @typescript-eslint/no-use-before-define */\n\nimport { createSlice } from '@reduxjs/toolkit';\nimport { FirebaseApp, initializeApp } from 'firebase/app';\nimport { Database, getDatabase } from 'firebase/database';\nimport { RootState } from '../../types/storeTypes';\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\n  measurementId: process.env.REACT_APP_FIREBASE_MEASUREMENT_ID,\n};\n\nconst app = initializeApp(firebaseConfig);\nconst database = getDatabase(app, process.env.REACT_APP_FIREBASE_DATABASE_URL);\n\ninterface authorizationState {\n  app: FirebaseApp | undefined;\n  database: Database;\n}\n\nconst initialSate: authorizationState = {\n  app,\n  database,\n};\n\nexport const firebaseSlice = createSlice({\n  name: 'firebase',\n  initialState: initialSate,\n  reducers: {\n  },\n});\n\nexport const selectors = {\n  getFirebaseApp: (state: RootState) => state.firebaseApp.app,\n  getDatabase: (state: RootState) => state.firebaseApp.database,\n};\n\nexport default firebaseSlice.reducer;\n","/* eslint-disable no-console */\n/* eslint-disable @typescript-eslint/no-unused-vars */\nimport {\n  Avatar,\n  Container,\n  Grid,\n  IconButton,\n  TextField,\n} from '@mui/material';\nimport React, {\n  FC,\n  memo,\n  useCallback,\n  useEffect,\n  useRef,\n  useState,\n} from 'react';\nimport { useSelector } from 'react-redux';\nimport {\n  ref,\n  set,\n  push,\n  onChildAdded,\n  Unsubscribe,\n} from 'firebase/database';\nimport SendIcon from '@mui/icons-material/Send';\nimport { nanoid } from 'nanoid';\nimport { useAuth } from '../../hooks/useAuth';\nimport { selectors } from '../../store/slices/firebaseSlice';\nimport { Message } from '../../types/message';\n\nimport './Chat.scss';\n\nexport const Chat: FC<{}> = memo(() => {\n  const { user } = useAuth();\n  const db = useSelector(selectors.getDatabase);\n  const messagesRef = ref(db, 'posts');\n  const [messages, setMessages] = useState<Array<Message>>([]);\n  const messagesDisplayBoxRef = useRef<HTMLDivElement | null>(null);\n\n  const [inputMessage, setInputMessage] = useState('');\n\n  const writeMessageToDB = useCallback(() => {\n    if (inputMessage.trim()) {\n      const newMessagesRef = push(messagesRef);\n\n      set(newMessagesRef, {\n        uID: user?.uid,\n        username: user?.displayName,\n        email: user?.email,\n        profile_picture: user?.photoURL,\n        message: inputMessage,\n      });\n      setInputMessage('');\n    }\n  }, [messagesRef, inputMessage]);\n\n  let closeConnection: Unsubscribe;\n\n  useEffect(() => {\n    closeConnection = onChildAdded(messagesRef, (data) => {\n      setMessages((prev: Array<Message>) => [...prev, data.val() as Message]);\n    });\n  }, []);\n\n  useEffect(() => {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    messagesDisplayBoxRef.current!.scrollTop = messagesDisplayBoxRef.current!.scrollHeight;\n  }, [messages]);\n\n  useEffect(() => {\n    return () => {\n      closeConnection();\n    };\n  }, []);\n\n  return (\n    <Container>\n      <Grid\n        container\n        alignItems=\"center\"\n        justifyContent=\"center\"\n        direction=\"column\"\n        display=\"flex\"\n        style={{\n          height: window.innerHeight - 70,\n          maxHeight: window.innerHeight - 70,\n        }}\n      >\n        <div\n          className=\"messagesBox\"\n          ref={messagesDisplayBoxRef}\n        >\n          {messages.map(message => (\n            user?.uid === message.uID\n              ? (\n                <div\n                  key={nanoid()}\n                  style={{\n                    display: 'flex',\n                    gridGap: '1px',\n                    justifyContent: 'end',\n                    padding: '0 20px',\n                  }}\n                >\n                  <div\n                    className=\"message-cloud message-cloud--from-me\"\n                  >\n                    <div>\n                      {message.message}\n                    </div>\n                  </div>\n                  <div\n                    style={{\n                      display: 'flex',\n                      flexDirection: 'column',\n                      alignItems: 'center',\n                      justifyContent: 'flex-end',\n                    }}\n                  >\n                    <Avatar src={message.profile_picture} />\n                  </div>\n                </div>\n              )\n              : (\n                <div\n                  key={nanoid()}\n                  style={{\n                    display: 'flex',\n                    gridGap: '1px',\n                    justifyContent: 'start',\n                    padding: '0 20px',\n                  }}\n                >\n                  <div\n                    style={{\n                      display: 'flex',\n                      flexDirection: 'column',\n                      alignItems: 'center',\n                      justifyContent: 'flex-end',\n                    }}\n                  >\n                    <Avatar src={message.profile_picture} />\n                  </div>\n                  <div\n                    className=\"message-cloud message-cloud--from-them\"\n                  >\n                    <div>\n                      {message.username}\n                    </div>\n                    <div>\n                      {message.message}\n                    </div>\n                  </div>\n                </div>\n              )\n          ))}\n        </div>\n\n        <Grid\n          container\n          alignItems=\"flex-end\"\n          direction=\"column\"\n          style={{ width: '90%' }}\n        >\n          <TextField\n            style={{ marginTop: 10 }}\n            fullWidth\n            maxRows={3}\n            multiline\n            size=\"small\"\n            InputProps={{\n              endAdornment: (\n                <IconButton\n                  color=\"primary\"\n                  aria-label=\"upload picture\"\n                  component=\"label\"\n                  onClick={writeMessageToDB}\n                  size=\"small\"\n                >\n                  <SendIcon />\n                </IconButton>\n              ),\n            }}\n            id=\"outlined-basic\"\n            label=\"Enter message\"\n            variant=\"outlined\"\n            value={inputMessage}\n            onChange={(event) => {\n              const { target } = event;\n\n              setInputMessage(target.value);\n            }}\n            onKeyDown={(event) => {\n              if ((event.code === 'Enter' || event.code === 'NumpadEnter') && event.ctrlKey) {\n                setInputMessage((prev) => `${prev}\\n`);\n\n                return;\n              }\n\n              if ((event.code === 'Enter' || event.code === 'NumpadEnter') && !event.ctrlKey) {\n                event.preventDefault();\n                writeMessageToDB();\n              }\n            }}\n          />\n        </Grid>\n      </Grid>\n    </Container>\n  );\n});\n","import React, { FC, memo } from 'react';\n\nexport const Home: FC<{}> = memo(() => {\n  return (\n    <div>\n      <h1>HOME PAGE</h1>\n    </div>\n  );\n});\n","import { io } from 'socket.io-client';\n\nconst options = {\n  'force new connection': true,\n  reconnetionAttempts: 'Infinity',\n  timeout: 15000,\n  transports: ['websocket'],\n};\n\nconst socket = io(process.env.REACT_APP_SIGNAL_SERVER_URL || '', options);\n\nexport default socket;\n","// there I imported rootState from store because i use it in selectors for this inner state\n\n/* eslint-disable import/no-cycle */\n\n// Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n// doesn't actually mutate the state because it uses the Immer library,\n// which detects changes to a \"draft state\" and produces a brand new\n// immutable state based off those changes\n\n/* eslint-disable no-param-reassign */\n\n// i use action before initialization in thunk so i need it to off warning of linter\n\n/* eslint-disable @typescript-eslint/no-use-before-define */\n\nimport { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport {\n} from 'firebase/auth';\nimport { Socket } from 'socket.io-client';\nimport { RootState } from '../../types/storeTypes';\nimport ACTIONS from '../../socket/actions';\nimport socket from '../../socket';\n\ninterface ChatState {\n  socket: Socket;\n  rooms: Array<string>;\n}\n\nconst initialSate: ChatState = {\n  socket,\n  rooms: [],\n};\n\nexport const updateRooms = createAsyncThunk(\n  'videochat/updateRooms',\n  async (rooms :Array<string>, thunkAPI) => {\n    const { dispatch } = thunkAPI;\n\n    dispatch(setRooms(rooms));\n  },\n);\n\nexport const requestCurrentRooms = () => {\n  socket.emit(ACTIONS.REQUEST_ROOMS);\n};\n\nexport const videochatSlice = createSlice({\n  name: 'videochat',\n  initialState: initialSate,\n  reducers: {\n    setRooms: (state, action: PayloadAction<Array<string>>) => {\n      state.rooms = action.payload;\n    },\n  },\n});\n\nexport const {\n  setRooms,\n} = videochatSlice.actions;\n\nexport const selectors = {\n  getRooms: (state: RootState) => state.videochat.rooms,\n  getSocket: (state: RootState) => state.videochat.socket,\n};\n\nexport default videochatSlice.reducer;\n","/* eslint-disable @typescript-eslint/no-unused-vars */\nimport React, { FC, memo, useCallback } from 'react';\nimport {\n  Button,\n  Container,\n  Grid,\n  List,\n  ListItemButton,\n  ListItemIcon,\n  ListItemText,\n  ListSubheader,\n  Tooltip,\n} from '@mui/material';\nimport VideoCameraFrontIcon from '@mui/icons-material/VideoCameraFront';\nimport RocketLaunchIcon from '@mui/icons-material/RocketLaunch';\nimport AddBoxIcon from '@mui/icons-material/AddBox';\nimport { useNavigate } from 'react-router-dom';\nimport { v4 } from 'uuid';\n// eslint-disable-next-line import/no-cycle\nimport { RoutesURLs } from '../../utils/routes';\n\ninterface Props {\n  rooms: Array<string>;\n}\n\nexport const ChatList:FC<Props> = memo(({ rooms }) => {\n  const navigate = useNavigate();\n\n  const createNewRoom = useCallback(() => {\n    navigate(`${RoutesURLs.VIDEOCHAT}/${v4()}`);\n  }, []);\n\n  const connectRoom = useCallback((roomID: string) => {\n    navigate(`${RoutesURLs.VIDEOCHAT}/${roomID}`);\n  }, []);\n\n  return (\n    <Container>\n      <Grid\n        container\n        alignItems=\"center\"\n        justifyContent=\"center\"\n        direction=\"column\"\n        display=\"flex\"\n        style={{ height: window.innerHeight - 68 }}\n      >\n        <List\n          sx={{\n            width: '100%',\n            overflowY: 'auto',\n            height: '70vh',\n            padding: 0,\n          }}\n          component=\"nav\"\n          aria-labelledby=\"avalible-rooms\"\n          subheader={(\n            <ListSubheader\n              component=\"div\"\n              id=\"nested-list-subheader\"\n            >\n              Avalible rooms\n            </ListSubheader>\n          )}\n        >\n\n          {rooms.map((roomID) => (\n            <Tooltip title=\"Click to join room\" key={roomID}>\n              <ListItemButton\n                onClick={() => {\n                  connectRoom(roomID);\n                }}\n              >\n                <ListItemIcon>\n                  <VideoCameraFrontIcon />\n                </ListItemIcon>\n                <ListItemText\n                  sx={{ wordWrap: 'break-word' }}\n                  primary={roomID}\n                />\n                <ListItemIcon>\n                  <RocketLaunchIcon />\n                </ListItemIcon>\n              </ListItemButton>\n            </Tooltip>\n          ))}\n        </List>\n        <Button\n          variant=\"outlined\"\n          endIcon={<AddBoxIcon />}\n          onClick={createNewRoom}\n        >\n          Create room\n        </Button>\n      </Grid>\n    </Container>\n  );\n});\n","import React, { FC, memo, useEffect } from 'react';\nimport { useAppDispatch, useAppSelector } from '../../hooks/typedReduxHooks';\nimport {\n  selectors,\n  requestCurrentRooms,\n  updateRooms,\n} from '../../store/slices/videochatSlice';\nimport ACTIONS from '../../socket/actions';\nimport { ChatList } from '../../components/chatList';\n\nexport const Videochat: FC<{}> = memo(() => {\n  const avalibleRooms = useAppSelector(selectors.getRooms);\n  const socket = useAppSelector(selectors.getSocket);\n  const dispatch = useAppDispatch();\n\n  useEffect(() => {\n    socket.on(ACTIONS.SHARE_ROOMS, ({ rooms = [] } = {}) => {\n      dispatch(updateRooms(rooms));\n    });\n    requestCurrentRooms();\n  }, []);\n\n  return (\n    <ChatList rooms={avalibleRooms} />\n  );\n});\n","import React, { FC } from 'react';\n\nexport const NotFound: FC<{}> = React.memo(() => {\n  return (\n    <div>\n      <h1>NOT FOUND PAGE</h1>\n    </div>\n  );\n});\n","/* eslint-disable consistent-return */\n/* eslint-disable no-console */\n/* eslint-disable @typescript-eslint/no-unused-vars */\nimport { useRef, useEffect, useCallback } from 'react';\nimport freeice from 'freeice';\nimport { useStateWithCallback } from './useStateWithCallback';\nimport socket from '../socket';\nimport ACTIONS from '../socket/actions';\n\nexport const LOCAL_VIDEO = 'LOCAL_VIDEO';\n\ntype PeerMediaElement = {\n  volume: number;\n  srcObject: object;\n} | null;\n\ntype Payload = {\n  [key: string]: any,\n};\n\ninterface PeerMediaElements {\n  [key: string]: PeerMediaElement | null;\n}\n\nexport const useWebRTC = (roomID: string) => {\n  const [clients, updateClients] = useStateWithCallback([]);\n\n  const addNewClient = useCallback((newClient, callback) => {\n    updateClients(list => {\n      if (!list.includes(newClient)) {\n        return [...list, newClient];\n      }\n\n      return list;\n    }, callback);\n    // if (!clients.includes(newClient)) {\n    //   updateClients((arr: any) => [...arr, newClient], callback);\n    // }\n  }, [clients, updateClients]);\n\n  const peerConnections = useRef<{[key: string]: RTCPeerConnection}>({});\n  const localMediaSteam = useRef<MediaStream | null>(null);\n  const peerMediaElements = useRef<PeerMediaElements>({\n    [LOCAL_VIDEO]: null,\n  });\n\n  useEffect(() => {\n    async function handleNewPeer(payload: Payload) {\n      const { peerID, createOffer } = payload;\n\n      if (peerID in peerConnections.current) {\n        return console.warn(`Already connected to peer ${peerID}`);\n      }\n\n      const stunServer = freeice();\n\n      console.log(stunServer);\n\n      peerConnections.current[peerID] = new RTCPeerConnection({\n        iceServers: stunServer,\n      });\n\n      console.log('peer connection was created');\n\n      peerConnections.current[peerID].onicecandidate = event => {\n        if (event.candidate) {\n          socket.emit(ACTIONS.RELAY_ICE, {\n            peerID,\n            iceCandidate: event.candidate,\n          });\n        }\n      };\n\n      let tracksCount = 0;\n\n      peerConnections.current[peerID].ontrack = async ({ streams: [remoteStream] }) => {\n        tracksCount += 1;\n\n        // i wait when video & audio track is received\n        if (tracksCount === 2) {\n          tracksCount = 0;\n          addNewClient(peerID, () => {\n            const peerElement = peerMediaElements.current[peerID];\n\n            if (peerElement) {\n              peerElement.srcObject = remoteStream;\n            }\n          });\n        }\n      };\n\n      const lms = localMediaSteam.current;\n\n      if (lms) {\n        lms.getTracks().forEach(track => {\n          peerConnections.current[peerID].addTrack(track, lms);\n        });\n      }\n\n      if (createOffer) {\n        const offer = await peerConnections.current[peerID].createOffer();\n\n        await peerConnections.current[peerID].setLocalDescription(offer);\n\n        socket.emit(ACTIONS.RELAY_SDP, {\n          peerID,\n          sessionDescription: offer,\n        });\n      }\n    }\n\n    socket.on(ACTIONS.ADD_PEER, handleNewPeer);\n\n    return () => {\n      socket.off(ACTIONS.ADD_PEER);\n    };\n  }, []);\n\n  useEffect(() => {\n    const handleRemovePeer = (payload: Payload) => {\n      const { peerID } = payload;\n\n      if (peerConnections.current[peerID]) {\n        peerConnections.current[peerID].close();\n      }\n\n      delete peerConnections.current[peerID];\n      delete peerMediaElements.current[peerID];\n\n      updateClients((list: Array<string>) => list.filter(c => c !== peerID));\n    };\n\n    socket.on(ACTIONS.REMOVE_PEER, handleRemovePeer);\n\n    return () => {\n      socket.off(ACTIONS.REMOVE_PEER);\n    };\n  }, []);\n\n  useEffect(() => {\n    async function setRemoteMedia(payload: Payload) {\n      const { peerID, sessionDescription: remoteDescription } = payload;\n\n      console.log('session description');\n\n      await peerConnections.current[peerID].setRemoteDescription(\n        new RTCSessionDescription(remoteDescription),\n      );\n\n      if (remoteDescription.type === 'offer') {\n        const answer = await peerConnections.current[peerID].createAnswer();\n\n        await peerConnections.current[peerID].setLocalDescription(answer);\n\n        socket.emit(ACTIONS.RELAY_SDP, {\n          peerID,\n          sessionDescription: answer,\n        });\n      }\n    }\n\n    socket.on(ACTIONS.SESSION_DESCRIPTION, setRemoteMedia);\n\n    return () => {\n      socket.off(ACTIONS.SESSION_DESCRIPTION);\n    };\n  }, []);\n\n  useEffect(() => {\n    socket.on(ACTIONS.ICE_CANDIDATE, ({ peerID, iceCandidate }) => {\n      console.log('ice candidate');\n      peerConnections.current[peerID].addIceCandidate(\n        new RTCIceCandidate(iceCandidate),\n      );\n    });\n\n    return () => {\n      socket.off(ACTIONS.ICE_CANDIDATE);\n    };\n  }, []);\n\n  useEffect(() => {\n    async function startCapture() {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        audio: true,\n        video: {\n          width: { min: 1024, ideal: 1280, max: 1920 },\n          height: { min: 576, ideal: 720, max: 1080 },\n        },\n      });\n\n      localMediaSteam.current = stream;\n\n      addNewClient(LOCAL_VIDEO, () => {\n        const localVideoElement = peerMediaElements.current[LOCAL_VIDEO];\n\n        if (localVideoElement && localMediaSteam.current) {\n          localVideoElement.volume = 0;\n          localVideoElement.srcObject = localMediaSteam.current;\n        }\n      });\n    }\n\n    startCapture()\n      .then(() => socket.emit(ACTIONS.JOIN, { room: roomID }))\n      .catch(e => console.error('Error getting userMedia', e));\n\n    return () => {\n      if (localMediaSteam && localMediaSteam.current) {\n        localMediaSteam.current.getTracks().forEach(track => {\n          track.stop();\n        });\n        socket.emit(ACTIONS.LEAVE);\n      }\n    };\n  }, [roomID]);\n\n  const provideMediaRef = useCallback((id: string, node) => {\n    peerMediaElements.current[id] = node;\n  }, []);\n\n  const deviceMuteSetter = useCallback((isTurnOn: boolean, device: 'microphone' | 'camera') => {\n    if (localMediaSteam.current) {\n      const tracks = localMediaSteam.current.getTracks();\n\n      switch (device) {\n        case 'microphone':\n          // eslint-disable-next-line no-case-declarations\n          const audioTrack = tracks.find((track) => track.kind === 'audio');\n\n          if (audioTrack) {\n            audioTrack.enabled = isTurnOn;\n          }\n\n          break;\n        case 'camera':\n          // eslint-disable-next-line no-case-declarations\n          const videoTrack = tracks.find((track) => track.kind === 'video');\n\n          if (videoTrack) {\n            videoTrack.enabled = isTurnOn;\n          }\n\n          break;\n        default:\n          throw new Error('unexpected type of device');\n      }\n    }\n  }, []);\n\n  return { clients, provideMediaRef, deviceMuteSetter };\n};\n","import {\n  useCallback,\n  useEffect,\n  useRef,\n  useState,\n} from 'react';\n\nexport const useStateWithCallback = (initialState: any) => {\n  const [state, setState] = useState(initialState);\n\n  // if i set null here - stupid TS linter says:\n  // \"This expression is not callable.\n\n  // Type 'never' has no call signatures.ts(2349)\"\n  // so i paste anon func\n\n  const callbackRef = useRef((s: any) => s);\n\n  const updateState = useCallback((newState, callback) => {\n    callbackRef.current = callback;\n\n    setState((prevState: any) => (\n      typeof newState === 'function' ? newState(prevState) : newState\n    ));\n  }, []);\n\n  useEffect(() => {\n    if (callbackRef.current) {\n      callbackRef.current(state);\n    }\n  }, [state]);\n\n  return [state, updateState];\n};\n","/* eslint-disable jsx-a11y/media-has-caption */\nimport { ToggleButton } from '@mui/material';\nimport React, { memo, FC, useState } from 'react';\nimport VolumeOffIcon from '@mui/icons-material/VolumeOff';\nimport { LOCAL_VIDEO } from '../../hooks/useWebRTC';\n\ninterface Props {\n  clientID: string;\n  provideMediaRef: (clientID: string, instanceHTMLVideoElement: HTMLVideoElement | null) => void;\n  containerLayoutStyle: {width: string, height: string};\n}\nexport const Video: FC<Props> = memo(({\n  clientID,\n  provideMediaRef,\n  containerLayoutStyle,\n}) => {\n  const [isMuted, setIsMuted] = useState<boolean>(false);\n\n  return (\n    <div\n      style={\n        {\n          ...containerLayoutStyle,\n        }\n      }\n    >\n      <div\n        style={{\n          width: '100%',\n          height: '100%',\n          borderRadius: '20px',\n          overflow: 'hidden',\n          position: 'relative',\n        }}\n      >\n        <video\n          ref={(instance) => {\n            provideMediaRef(clientID, instance);\n          }}\n          width=\"100%\"\n          height=\"100%\"\n          autoPlay\n          playsInline\n          muted={clientID === LOCAL_VIDEO || isMuted}\n        />\n        {!(clientID === LOCAL_VIDEO) && (\n          <ToggleButton\n            value=\"left\"\n            selected={isMuted}\n            onChange={() => {\n              setIsMuted((prev) => !prev);\n            }}\n            style={{\n              width: 10,\n              height: 10,\n              position: 'absolute',\n              bottom: 0,\n              left: 'calc(50% - 5px)',\n              marginBottom: 5,\n            }}\n          >\n            <VolumeOffIcon />\n          </ToggleButton>\n        )}\n      </div>\n    </div>\n  );\n});\n","/* eslint-disable jsx-a11y/media-has-caption */\nimport { Container } from '@mui/system';\nimport React, {\n  FC, memo, useEffect, useState,\n} from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { ToggleButton } from '@mui/material';\nimport MicOffIcon from '@mui/icons-material/MicOff';\nimport VideocamOffIcon from '@mui/icons-material/VideocamOff';\nimport VideocamIcon from '@mui/icons-material/Videocam';\nimport MicIcon from '@mui/icons-material/Mic';\nimport CallEndIcon from '@mui/icons-material/CallEnd';\nimport { Video } from '../../components/video';\nimport { useWebRTC } from '../../hooks/useWebRTC';\n// eslint-disable-next-line import/no-cycle\nimport { RoutesURLs } from '../../utils/routes';\n\nfunction layout(clientsCount = 1) {\n  const pairs = Array.from<any>({ length: clientsCount })\n    .reduce((acc, next, index, arr) => {\n      if (index % 2 === 0) {\n        acc.push(arr.slice(index, index + 2));\n      }\n\n      return acc;\n    }, []);\n\n  const pairsCount = pairs.length;\n  const height = `${100 / pairsCount}%`;\n\n  return pairs.map((row: Array<any>, index: number, arr: Array<any>) => {\n    if (index === arr.length - 1 && row.length === 1) {\n      return [{\n        width: '100%',\n        height,\n      }];\n    }\n\n    return row.map(() => ({\n      width: '50%',\n      height,\n    }));\n  }).flat();\n}\n\nexport const VideochatRoom: FC<{}> = memo(() => {\n  const roomID = useParams().id || '';\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const { clients, provideMediaRef, deviceMuteSetter } = useWebRTC(roomID);\n  const videoLayout = layout(clients.length);\n\n  const [isMicrophoneMuted, setIsMicrophoneMuted] = useState(false);\n  const [isCameraOff, setIsCameraOff] = useState(false);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    deviceMuteSetter(!isMicrophoneMuted, 'microphone');\n  }, [isMicrophoneMuted]);\n\n  useEffect(() => {\n    deviceMuteSetter(!isCameraOff, 'camera');\n  }, [isCameraOff]);\n\n  return (\n    <Container>\n      <h1>Videochat room</h1>\n      <h1>{roomID}</h1>\n      <div\n        style={{\n          display: 'flex',\n          alignItems: 'center',\n          height: '80vh',\n          flexWrap: 'wrap',\n        }}\n      >\n        {clients.map((clientID: string, index: number) => (\n          <Video\n            clientID={clientID}\n            provideMediaRef={provideMediaRef}\n            key={clientID}\n            containerLayoutStyle={videoLayout[index]}\n          />\n        ))}\n      </div>\n      <div\n        style={{\n          display: 'flex',\n          justifyContent: 'center',\n        }}\n      >\n        <ToggleButton\n          value=\"micro\"\n          selected={isMicrophoneMuted}\n          onChange={() => {\n            setIsMicrophoneMuted((prev) => !prev);\n          }}\n          style={{\n            // width: 10,\n            // height: 10,\n            marginBottom: 5,\n          }}\n        >\n          {isMicrophoneMuted ? <MicOffIcon /> : <MicIcon />}\n        </ToggleButton>\n        <ToggleButton\n          value=\"camera\"\n          selected={isCameraOff}\n          onChange={() => {\n            // eslint-disable-next-line no-console\n            setIsCameraOff((prev) => !prev);\n          }}\n          style={{\n            // width: 10,\n            // height: 10,\n            marginBottom: 5,\n          }}\n        >\n          {isCameraOff ? <VideocamOffIcon /> : <VideocamIcon />}\n        </ToggleButton>\n        <ToggleButton\n          value=\"endCall\"\n          onClick={() => {\n            navigate(RoutesURLs.VIDEOCHAT, { replace: true });\n          }}\n          style={{\n            // width: 10,\n            // height: 10,\n            marginBottom: 5,\n          }}\n        >\n          <CallEndIcon fontSize=\"inherit\" />\n        </ToggleButton>\n      </div>\n    </Container>\n  );\n});\n","import React from 'react';\nimport { Navigate } from 'react-router-dom';\n// eslint-disable-next-line import/no-cycle\nimport { Login } from '../pages/login';\nimport { Chat } from '../pages/chat';\n// eslint-disable-next-line import/no-cycle\nimport { Home } from '../pages/home';\n// eslint-disable-next-line import/no-cycle\nimport { Videochat } from '../pages/videochat';\nimport { NotFound } from '../pages/notFound';\nimport { VideochatRoom } from '../pages/videochatRoom';\n\n// eslint-disable-next-line no-shadow\nexport enum RoutesURLs {\n  LOGIN = '/login',\n  VIDEOCHAT = '/videochat',\n  VIDEOCHAT_ROOM = '/videochat/:id',\n  CHAT = '/chat',\n  HOME = '/home',\n  ROOT = '/',\n  WRONG = '*',\n}\n\ninterface RouteDscription {\n  path: RoutesURLs;\n  component: JSX.Element;\n}\n\ntype Routes = Array<RouteDscription>;\n\nexport const publicRoutes: Routes = [\n  {\n    path: RoutesURLs.ROOT,\n    component: (<Navigate to={RoutesURLs.HOME} replace />),\n  },\n  {\n    path: RoutesURLs.HOME,\n    component: <Home />,\n  },\n  {\n    path: RoutesURLs.LOGIN,\n    component: <Login />,\n  },\n  {\n    path: RoutesURLs.WRONG,\n    component: <NotFound />,\n  },\n];\n\nexport const privateRoutes: Routes = publicRoutes.concat([\n  {\n    path: RoutesURLs.CHAT,\n    component: <Chat />,\n  },\n  {\n    path: RoutesURLs.VIDEOCHAT,\n    component: <Videochat />,\n  },\n  {\n    path: RoutesURLs.VIDEOCHAT_ROOM,\n    component: <VideochatRoom />,\n  },\n]);\n","/* eslint-disable no-shadow */\nimport React, { FC, memo } from 'react';\nimport {\n  AppBar,\n  IconButton,\n  Toolbar,\n  Typography,\n  Container,\n  Box,\n  Menu,\n  MenuItem,\n  Tooltip,\n  Avatar,\n} from '@mui/material';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport ChatIcon from '@mui/icons-material/Chat';\nimport LoginIcon from '@mui/icons-material/Login';\nimport { NavLink, useNavigate } from 'react-router-dom';\nimport { nanoid } from 'nanoid';\nimport { useAuth } from '../../hooks/useAuth';\nimport { removeUser } from '../../store/slices/userSlice';\nimport { useAppDispatch } from '../../hooks/typedReduxHooks';\nimport { RoutesURLs } from '../../utils/routes';\n\nenum Pages {\n  CHAT = 'Chat',\n  HOME = 'Home',\n  VIDEOCHAT = 'Videochat',\n}\n\nenum UserSettingsDropdown {\n  PROFILE = 'Profile',\n  LOGOUT = 'Logout',\n}\n\nexport const Navbar: FC<{}> = memo(() => {\n  const { isAuth: isLoggedIn, user, auth } = useAuth();\n  const dispatch = useAppDispatch();\n  const navigate = useNavigate();\n\n  const [anchorElNav, setAnchorElNav] = React.useState<null | HTMLElement>(null);\n  const [anchorElUser, setAnchorElUser] = React.useState<null | HTMLElement>(null);\n\n  const handleOpenNavMenu = (event: React.MouseEvent<HTMLElement>) => {\n    setAnchorElNav(event.currentTarget);\n  };\n\n  const handleCloseNavMenu = (page: Pages | null) => {\n    if (page) {\n      navigate(page.toLowerCase());\n    }\n\n    setAnchorElNav(null);\n  };\n\n  const handleOpenUserMenu = (event: React.MouseEvent<HTMLElement>) => {\n    setAnchorElUser(event.currentTarget);\n  };\n\n  const handleCloseUserMenu = async (setting: UserSettingsDropdown) => {\n    switch (setting) {\n      case UserSettingsDropdown.LOGOUT:\n        if (auth) {\n          await auth.signOut();\n          dispatch(removeUser());\n        }\n\n        break;\n      default:\n        // throw new Error('unexpected selected menu option');\n        break;\n    }\n\n    setAnchorElUser(null);\n  };\n\n  return (\n    <header>\n      <AppBar\n        position=\"static\"\n      >\n        <Container maxWidth=\"xl\">\n          <Toolbar disableGutters>\n            <ChatIcon sx={{ display: { xs: 'none', md: 'flex' }, mr: 1 }} />\n            <Typography\n              variant=\"h6\"\n              noWrap\n              sx={{\n                mr: 2,\n                display: { xs: 'none', md: 'flex' },\n                fontFamily: 'monospace',\n                flexGrow: 1,\n                fontWeight: 700,\n                letterSpacing: '.3rem',\n                color: 'inherit',\n                textDecoration: 'none',\n              }}\n            >\n              Chat\n            </Typography>\n\n            <Box sx={{ flexGrow: 1, display: { xs: 'flex', md: 'none' } }}>\n              <IconButton\n                size=\"large\"\n                aria-label=\"account of current user\"\n                aria-controls=\"menu-appbar\"\n                aria-haspopup=\"true\"\n                onClick={handleOpenNavMenu}\n                color=\"inherit\"\n              >\n                <MenuIcon />\n              </IconButton>\n              <Menu\n                id=\"menu-appbar\"\n                anchorEl={anchorElNav}\n                anchorOrigin={{\n                  vertical: 'bottom',\n                  horizontal: 'left',\n                }}\n                keepMounted\n                transformOrigin={{\n                  vertical: 'top',\n                  horizontal: 'left',\n                }}\n                open={Boolean(anchorElNav)}\n                onClose={() => {\n                  handleCloseNavMenu(null);\n                }}\n                sx={{\n                  display: { xs: 'block', md: 'none' },\n                }}\n              >\n                {Object.values(Pages).map((page) => (\n                  <MenuItem\n                    key={nanoid()}\n                    onClick={() => {\n                      handleCloseNavMenu(page);\n                    }}\n                  >\n                    <Typography textAlign=\"center\">{page}</Typography>\n                  </MenuItem>\n                ))}\n              </Menu>\n            </Box>\n            <ChatIcon sx={{ display: { xs: 'flex', md: 'none' }, mr: 1 }} />\n            <Typography\n              variant=\"h5\"\n              noWrap\n              sx={{\n                mr: 2,\n                display: { xs: 'flex', md: 'none' },\n                flexGrow: 1,\n                fontFamily: 'monospace',\n                fontWeight: 700,\n                letterSpacing: '.3rem',\n                color: 'inherit',\n                textDecoration: 'none',\n              }}\n            >\n              Chat\n            </Typography>\n            <Box sx={{ flexGrow: 1, display: { xs: 'none', md: 'flex' } }}>\n              {Object.values(Pages).map((page) => (\n                <MenuItem\n                  key={nanoid()}\n                  onClick={() => {\n                    handleCloseNavMenu(page);\n                  }}\n                >\n                  <Typography textAlign=\"center\">{page}</Typography>\n                </MenuItem>\n              ))}\n            </Box>\n\n            <Box sx={{ flexGrow: 0 }}>\n              {\n                isLoggedIn && user\n                  ? (\n                    <>\n                      <Tooltip title=\"Open settings\">\n                        <IconButton onClick={handleOpenUserMenu} sx={{ p: 0 }}>\n                          <Avatar alt=\"User Avatar\" src={user.photoURL || ''} />\n                        </IconButton>\n                      </Tooltip>\n                      <Menu\n                        sx={{ mt: '45px' }}\n                        id=\"menu-appbar\"\n                        anchorEl={anchorElUser}\n                        anchorOrigin={{\n                          vertical: 'top',\n                          horizontal: 'right',\n                        }}\n                        keepMounted\n                        transformOrigin={{\n                          vertical: 'top',\n                          horizontal: 'right',\n                        }}\n                        open={Boolean(anchorElUser)}\n                        onClose={handleCloseUserMenu}\n                      >\n                        {Object.values(UserSettingsDropdown).map((setting) => (\n                          <MenuItem\n                            key={nanoid()}\n                            onClick={() => {\n                              handleCloseUserMenu(setting);\n                            }}\n                          >\n                            <Typography textAlign=\"center\">{setting}</Typography>\n                          </MenuItem>\n                        ))}\n                      </Menu>\n                    </>\n                  )\n                  : (\n                    <NavLink\n                      to={RoutesURLs.LOGIN}\n                      style={() => (\n                        {\n                          color: '#fff',\n                        }\n                      )}\n                    >\n                      <LoginIcon />\n                    </NavLink>\n                  )\n              }\n            </Box>\n          </Toolbar>\n        </Container>\n      </AppBar>\n    </header>\n  );\n});\n","import React, { FC, memo } from 'react';\nimport { Route, Routes } from 'react-router-dom';\nimport { nanoid } from 'nanoid';\nimport { privateRoutes, publicRoutes } from '../../utils/routes';\nimport { useAuth } from '../../hooks/useAuth';\n\nexport const AppRouter: FC<{}> = memo(() => {\n  const { isAuth: isLoggedIn } = useAuth();\n\n  return (\n    isLoggedIn\n      ? (\n        <Routes>\n          {privateRoutes.map(({ path, component }) => (\n            <Route\n              path={path}\n              element={component}\n              key={nanoid()}\n            />\n          ))}\n        </Routes>\n      )\n      : (\n        <Routes>\n          {publicRoutes.map(({ path, component }) => (\n            <Route\n              path={path}\n              element={component}\n              key={nanoid()}\n            />\n          ))}\n        </Routes>\n      )\n  );\n});\n","import React, { FC, memo, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { getAuth } from 'firebase/auth';\nimport { Navbar } from '../nav';\n\nimport { AppRouter } from '../appRouter';\nimport { selectors } from '../../store/slices/firebaseSlice';\nimport { useAppDispatch } from '../../hooks/typedReduxHooks';\nimport { setAuth, setDirectlyUser } from '../../store/slices/userSlice';\n\nimport './App.scss';\n\nexport const App: FC<{}> = memo(() => {\n  const dispatch = useAppDispatch();\n  const app = useSelector(selectors.getFirebaseApp);\n  const auth = getAuth(app);\n\n  dispatch(setAuth(auth));\n\n  const unsubscribe = auth.onAuthStateChanged((user) => {\n    if (user) {\n      dispatch(setDirectlyUser(user));\n    }\n  });\n\n  useEffect(() => {\n    return () => {\n      unsubscribe();\n    };\n  }, []);\n\n  return (\n    <>\n      <Navbar />\n      <AppRouter />\n    </>\n  );\n});\n","/* eslint-disable import/no-cycle */\nimport { configureStore } from '@reduxjs/toolkit';\nimport userReducer from './slices/userSlice';\nimport firebaseAppReducer from './slices/firebaseSlice';\nimport videochatReducer from './slices/videochatSlice';\n\nexport const store = configureStore({\n  reducer: {\n    user: userReducer,\n    firebaseApp: firebaseAppReducer,\n    videochat: videochatReducer,\n  },\n  middleware: (getDefaultMiddleware) => getDefaultMiddleware({\n    serializableCheck: {\n      // Ignore these action types\n      ignoredActions: [\n        'user/setUser',\n        'user/setDirectlyUser',\n        'user/setAuth',\n      ],\n      // Ignore these field paths in all actions\n      // ignoredActionPaths: ['meta.arg', 'payload.timestamp'],\n      // Ignore these paths in the state\n      ignoredPaths: [\n        'user.auth',\n        'user.user',\n        'user.credential',\n        'firebaseApp.app',\n        'firebaseApp.database',\n        'videochat.socket',\n      ],\n    },\n  }),\n});\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { App } from './components/app';\nimport { store } from './store';\n\nimport './index.scss';\n\nReactDOM.render(\n  <HashRouter>\n    <Provider store={store}>\n      <React.StrictMode>\n        <App />\n      </React.StrictMode>\n    </Provider>\n  </HashRouter>,\n  document.getElementById('root'),\n);\n","const ACTIONS = {\n  JOIN: 'join',\n  LEAVE: 'leave',\n  SHARE_ROOMS: 'share-rooms',\n  REQUEST_ROOMS: 'request-rooms',\n  ADD_PEER: 'add-peer',\n  REMOVE_PEER: 'remove-peer',\n  RELAY_SDP: 'relay-sdp',\n  RELAY_ICE: 'relay-ice',\n  ICE_CANDIDATE: 'ice-candidate',\n  SESSION_DESCRIPTION: 'session-desription',\n  USER_MUTED: 'user-muted',\n};\n\nmodule.exports = ACTIONS;\n"],"sourceRoot":""}